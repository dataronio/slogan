macro set_empty (x) { x = [] };

// test:
var x = 100;
var y = 200;
set_empty (y);
println (x, y); // => 100 []

macro ntimes (n, body) {
    letrec fn_loop = function (x) {
        if x >= 0 {
            body;
            fn_loop (x - 1)
        }
    }
    fn_loop (n)
};

// test:
ntimes (10, println ("hello, world!"));

macro for (x, start, stop, body) {
    let x = start
    let cmpr = if stop > 0 number_is_lt else number_is_gt
    let incr = if stop > 0 add else sub
    letrec fn_loop = function () {
        if cmpr (x, stop) {
            body;
            x = incr (x, 1);
            fn_loop ()
        }
    }
    fn_loop ()
};

// test:
for (i, 0, 10, println (i)); // => 0 ... 9
for (i, 0, -10, println (i)); // => 0 ... -9

macro while ($cond, $body) {
    letrec fn_loop = function () {
        if $cond {
            $body;
            fn_loop ()
        }
    }
    fn_loop ()
};

// test:
let i = 0
while (i < 10, {
    println (i);
    i = i + 1
});

macro when ($cond, $body) {
    if $cond $body
};

macro unless ($cond, $body) {
    if not ($cond) $body
};


// test:
let i = 10
when (i <= 10, println ("i <= 10"));

let i = 100
when (i <= 10, println ("i <= 10"));

let i = 10
unless (i <= 10, println ("i <= 10"));

let i = 100
unless (i <= 10, println ("i <= 10"));
