// Sample code from the talk "Go Concurrency Patterns" (http://www.youtube.com/watch?v=f6kdp27TYZs)

var boring = function (dest) {
    task_send (dest, "boring!");
    task_sleep (random_integer (5));
    boring (dest)
};

var recv_n = function (n) {
    if n >= 0 {
        println ("You say: ", task_receive ());
        recv_n (n - 1)
    }
};

var test_boring = function () {
    task (boring, args = [current_task ()]);
    recv_n (5)
};
        
// Generator (with implicit "fan-in") pattern.

var message_generator = function (msg, dest) {
    letrec generator = function () {
        task_send (dest, msg);
        task_sleep (random_integer (5));
        generator ()
    } task (generator)
};

var test_message_generator = function () {
    message_generator ("hello", current_task ());
    message_generator ("hi", current_task ());
    recv_n (10)
};
