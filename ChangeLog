2017-10-28  Vijay Mathew Pandyalakal  <vijay.the.lisper@gmail.com>

	* v0.12.3 enhancements to list comprehensions and reactive variables.
	* src/core/list.scm: comprehensions to work with all sequences, including user defined ones.
	* src/core/task.scm: reactive variables equality check can be customized.
	* src/Makefile: faster, parallel builds.

2017-07-18  Vijay Mathew Pandyalakal  <vijay.the.lisper@gmail.com>

	* v0.12.2 has some minor feature additions and bug fixes.
	* src/core/ilcodegen.scm: hash-table and record literals are now serializable
	* src/core/task.scm: task-suspend/resume functions added
	* src/core/parallel.scm: facility to set base IPC port.
	* src/core/lpair.scm: `yield` is an expression now, can return a value.
	* src/core/lpair.scm: `find` made generic for all sequence types.

2017-06-17  Vijay Mathew Pandyalakal  <vijay.the.lisper@gmail.com>

	* v0.12.1 is a bug fix release.
	* src/core/array.scm: `array_ref_set` to support multidimensional arrays.
	* src/core/stream.scm: transcoder names fixed.
	* src/core/ilcodegen.scm: `finally` semantics made conformant with `dynamic_wind`.

2017-06-10  Vijay Mathew Pandyalakal  <vijay.the.lisper@gmail.com>

	* v0.12.0 is a major release of the language with multiple breaking changes with past releases.
	* src/core/ilcodegen.scm: `let` expression changed to support sequential variable bindings and pattern based destructuring.
	* src/core/ilcodegen.scm: `letseq` removed from the language.
	* src/core/ilcodegen.scm: `letfn` introduced for local bindings with no backward reference.
	* src/core/ilcodegen.scm: dynamic variables, `letdyn` expression introduced for task-local bindings.
	* src/core/stream.scm: bit_streams support added.
	* src/core/syntax.scm: macros and syntactic extensions.
	* src/core/parallel.scm: code refactored, TCP/IP based async messaging, `act` and `react` removed.
