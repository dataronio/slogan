;; Copyright (c) 2013-2016 by Vijay Mathew Pandyalakal, All Rights Reserved.

(define core_compose compose)
(define core_identiy identity)
(define core_mapfn mapfn)
(define core_partial partial)
(define core_complement complement)
(define core_namespace_names namespace_names)
(define core_namespace_hide namespace_hide)
(define core_namespace_unhide namespace_unhide)
(define core_namespace_create namespace_create)
(define core_namespace_delete namespace_delete)
(define core_apply apply)
(define core_until until)
(define core_map map)
(define core_for_each for_each)
(define core_for_all for_all)
(define core_exists exists)
(define core_fold_left fold_left)
(define core_fold_right fold_right)
(define core_fold fold)
(define core_array_map array_map)
(define core_array_for_each array_for_each)
(define core_string_for_each string_for_each)
(define core_callcc callcc)
(define core_dynamic_wind dynamic_wind)
(define core_values values)
(define core_call_with_values call_with_values)
(define core_force force)
(define core_eval eval)
(define core_is_eq is_eq)
(define core_is_eqv is_eqv)
(define core_is_equal is_equal)
(define core_is_boolean is_boolean)
(define core_is_empty is_empty)
(define core_is_pair is_pair)
(define core_is_number is_number)
(define core_is_complex is_complex)
(define core_is_real is_real)
(define core_is_rational is_rational)
(define core_is_integer is_integer)
(define core_is_char is_char)
(define core_is_string is_string)
(define core_is_array is_array)
(define core_is_u8array is_u8array)
(define core_is_s8array is_s8array)
(define core_is_bit_array is_bit_array)
(define core_is_symbol is_symbol)
(define core_is_hashtable is_hashtable)
(define core_is_function is_function)
(define core_pair pair)
(define core_head head)
(define core_tail tail)
(define core_set_head set_head)
(define core_set_tail set_tail)
(define core_list list)
(define core_list_of list_of)
(define core_is_list is_list)
(define core_length length)
(define core_at at)
(define core_list_tail list_tail)
(define core_drop drop)
(define core_take take)
(define core_take_while take_while)
(define core_drop_while drop_while)
(define core_append append)
(define core_reverse reverse)
(define core_memq memq)
(define core_memv memv)
(define core_member member)
(define core_memp memp)
(define core_remq remq)
(define core_remv remv)
(define core_remove remove)
(define core_remp remp)
(define core_filter filter)
(define core_partition partition)
(define core_sublist sublist)
(define core_range range)
(define core_find find)
(define core_position position)
(define core_assq assq)
(define core_assv assv)
(define core_assoc assoc)
(define core_assp assp)
(define core_get get)
(define core_copy_list copy_list)
(define core_zip zip)
(define core_zip_with zip_with)
(define core_sort sort)
(define core_quicksort quicksort)
(define core_mergesort mergesort)